# This is a basic workflow to help you get started with Actions

name: NpmFixer

# Controls when the workflow will run
on:
  # schedule:
  #   # Run weekly on Friday at ~8am MT - infrequent runs to allow merging PRs
  #   - cron: '0 14 * * FRI'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Run linck checker
  npmfixer:
    runs-on: ubuntu-latest
    
    steps: 
      # This configures git including credentials and allows push
      - name: checkout repo
        uses: actions/checkout@v2

      - name: install pre-reqs
        run: |
          set -x
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          nvm install stable
          npm install -g typescript
          npm install -g aws-cdk
          npm install -g npm-check-updates
          #
          nvm version
          npm version
          npm view typescript version
          npm view aws-cdk version
          cdk --version
          npm view npm-check-updates version

      - name: fix package files and check synth
        run: |
          set -x
          CDKDIRS=$( resources/templates/*/package*.json | sed 's#/[^/]*$##' | uniq )
          for dir in ${CDKDIRS}; do
            (
              echo ------------------------------------------
              echo $dir
              echo ------------------------------------------
              cd $dir
              rm -rf node_modules package-lock.json
              ncu -u
              cdk synth
            )
          done



      # This works in conjunction with actions/checkout@v2
      - name: commit back to repo
        run: |
          set -x
          DATE=$( date '+%Y-%m-%d %H:%M:%S' )
          RENDER_BRANCH=automation/npm-fixes
          git config --global user.name "npmfixer"
          git config --global user.email "rudpot@amazon.com"
          git fetch origin
          git checkout main
          git pull
          git branch -a | fgrep ${RENDER_BRANCH} && git checkout ${RENDER_BRANCH} || git checkout -b ${RENDER_BRANCH}
          git status
          git diff
      #     git add deck/merged.pdf
      #     git commit -m "PDF renderer ${DATE}"
      #     git push --set-upstream origin ${RENDER_BRANCH}
      #     echo ${{ github.token }} | gh auth login --with-token
      #     # Can't see a way to check if there is a PR already so this will "fail"
      #     gh pr create --title "PR for autogen PDF" --body "Pull request for a PDF rendering of workshop created by automation workflow. This should only change a SINGLE FILE, deck/merged.pdf. If it changes anything other than that, reject the PR and review automation"

          
